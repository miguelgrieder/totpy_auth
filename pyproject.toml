[build-system]
requires = ['setuptools', 'wheel']
build-backend = 'setuptools.build_meta'

[tool.pytest.ini_options]
addopts = "--cov=totpy_auth"
testpaths = ["tests"]

[tool.black]
line-length = 100

[tool.isort]
profile = "black"
line_length = 100

[tool.mypy]
strict = true
show_error_codes = true
show_column_numbers = true

[tool.coverage.report]
exclude_lines = ["pragma: no cover", "if TYPE_CHECKING:"]
precision = 2

[tool.ruff]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
select = [
  "A",   # flake8-builtins
  "E",   # pycodestyle errors
  "W",   # pycodestyle warnings
  "F",   # pyflakes
  "C4",  # flake8-comprehensions
  "B",   # flake8-bugbear
  "N",   # pep8-naming
  "C90", # mccabe
  "S",   # flake8-bandit
  "T20", # flake8-print
  "ERA", # eradicate
  "RUF", # Ruff-specific rules
  "TRY", # tryceratops
  "D",   # pydocstyle
  # "I",  # isort
]
ignore = [
  "D1",   # pydocstyle: missing docstrings
  "D203", # pydocstyle: one-blank-line-before-class
  "D213", # pydocstyle: multi-line-summary-second-line
]
line-length = 100

[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]     # Use of `assert`
"__init__.py" = ["F401"] # imported but unused

[tool.ruff.pep8-naming]
# Allow Pydantic's `@validator` and `@root_validator` decorator to trigger class method treatment.
classmethod-decorators = ["classmethod"]
